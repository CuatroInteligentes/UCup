#include <ESP8266WiFi.h>
#include <ESP8266HTTPClient.h>

String comfy_temp = "";
byte temp = 255;
bool alerted = 0;

void check_t();
void send_alert();

void setup() {

  Serial.begin(115200);
  WiFi.mode(WIFI_STA);
  WiFi.begin("APforME", "zzz100200");
  Serial.println("");

  delay(2500);

  while (WiFi.status() != WL_CONNECTED) {
    delay(500);
    Serial.println("nwc");
  }

  Serial.println("wic");

}

void loop() {

  check_t();

  if (Serial.available() > 0)   temp = Serial.read();

  if ((temp <= atoi(&comfy_temp[0])) && (!alerted)) {
    //Serial.println(temp);
    //Serial.println(atoi(&comfy_temp[0]));
    Serial.println("tic");
    send_alert();
    alerted = 1;
  }

}

//FUNCTIONS AND ETC///////////////////////////////////////////

void check_t() {

  HTTPClient http;

  http.begin("http://.ngrok.io/buf.txt");
  http.addHeader("Content-Type", "text/plain");

  int httpCode = http.GET();

  if (httpCode > 0) {
    if (httpCode == HTTP_CODE_OK) {
      String payload = http.getString();
      if (payload != comfy_temp) {
        comfy_temp = payload;
      }
    }
  }
  
  http.end();
}



void send_alert() {

  HTTPClient http;

  http.begin("http://.ngrok.io/bot.php");
  http.addHeader("Content-Type", "application/x-www-form-urlencoded");

  http.POST("ready=yes");
/*  int httpCode = http.POST("ready=yes");
  if (httpCode > 0) {
    Serial.printf("[HTTP] POST... code: %d\n", httpCode);
    http.writeToStream(&Serial);

  } else Serial.printf("[HTTP] POST... failed, error: %s\n", http.errorToString(httpCode).c_str());//*/

  http.end();

}